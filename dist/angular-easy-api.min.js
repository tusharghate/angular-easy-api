!function(){function util($log){return{replaceInPath:function(path,data){for(var properties=path.match(/[^{}]+(?=\})/g)||[],i=0;i<properties.length;i++){var property=properties[i];path=path.replace("{"+property+"}",data[property])}return path}}}function easyAPIProvider(){function EasyAPI($log,$http,util){function _generate(json){var _api={};if(!_isJSONValid(json))return{};var protocol=json.protocol||"http",host=json.host,endpoints=json.endpoints;return angular.forEach(endpoints,function(data,path){_api[data.namespace]||(_api[data.namespace]={}),angular.forEach(data.methods,function(method,operationId){_api[data.namespace][operationId]=function(data,config){return config=config||{},config.method=method,config.url=protocol+"://"+host+util.replaceInPath(path,data),config.data=data,$http(config)}})}),_api}function _isJSONValid(_json){return _json&&""!=_json?0===Object.getOwnPropertyNames(_json).length?($log.error("JSON is not constructed correctly!"),!1):!(!_json.hasOwnProperty("host")||!_json.hasOwnProperty("endpoints"))||($log.error("JSON is missing host and/or endpoints!"),!1):($log.error("JSON is empty!"),!1)}return _generate(_json)}var _json={};this.setJSON=function(json){_json=json},this.$get=EasyAPI,EasyAPI.$inject=["$log","$http","util"]}angular.module("easyAPI",[]).factory("util",util).provider("easyAPI",easyAPIProvider),util.$inject=["$log"]}(angular);